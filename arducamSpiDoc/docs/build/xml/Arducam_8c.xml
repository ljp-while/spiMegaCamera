<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Arducam_8c" kind="file" language="C++">
    <compoundname>Arducam.c</compoundname>
    <includes refid="Arducam_8h" local="yes">Arducam.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/home/lou/arducamSpiCamera/libraryC/Arducam.c</label>
        <link refid="Arducam_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Arducam.h</label>
        <link refid="Arducam_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>Platform.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="Arducam_8h" kindref="compound">Arducam.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_TEST1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00<sp/><sp/>//TEST<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_FIFO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04<sp/><sp/>//FIFO<sp/>and<sp/>I2C<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_CLEAR_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_START_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_RDPTR_RST_MASK<sp/><sp/><sp/><sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_WRPTR_RST_MASK<sp/><sp/><sp/><sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARDUCHIP_TRIG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x44<sp/><sp/>//Trigger<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VSYNC_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHUTTER_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAP_DONE_MASK<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x45<sp/><sp/>//Camera<sp/>write<sp/>FIFO<sp/>size[7:0]<sp/>for<sp/>burst<sp/>to<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x46<sp/><sp/>//Camera<sp/>write<sp/>FIFO<sp/>size[15:8]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FIFO_SIZE3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x47<sp/><sp/>//Camera<sp/>write<sp/>FIFO<sp/>size[18:16]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BURST_FIFO_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3C<sp/><sp/>//Burst<sp/>FIFO<sp/>read<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SINGLE_FIFO_READ<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x3D<sp/><sp/>//Single<sp/>FIFO<sp/>read<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__MSP430G2553__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BUF_MAX_LENGTH<sp/><sp/>50</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BUF_MAX_LENGTH<sp/><sp/>255</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_POWER_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_RESET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X07<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_CAPTURE_RESOLUTION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_BRIGHTNESS_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_CONTRAST_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SATURATION_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_EV_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_WHILEBALANCE_MODE_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_COLOR_EFFECT_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SHARPNESS_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_AUTO_FOCUS_CONTROL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL<sp/><sp/>0X2A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_GAIN_BIT_9_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X2B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_GAIN_BIT_7_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X2C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_19_16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X2D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_15_8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X2E</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_MANUAL_EXPOSURE_BIT_7_0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X2F</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_ID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_STATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x44</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_DEVICE_ADDRESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X0A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_REGISTER_HIGH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X0B</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_REGISTER_LOW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X0C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_DEBUG_REGISTER_VALUE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X0D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_REG_SENSOR_STATE_IDLE<sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_SENSOR_RESET_ENABLE<sp/><sp/><sp/>(1&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_FORMAT_BASICS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_SET_CAPTURE_MODE<sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAM_SET_VIDEO_MODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_WHILEBALANCE<sp/><sp/>0X02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_EXPOSURE<sp/><sp/><sp/><sp/><sp/><sp/>0X01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_GAIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0X00</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_TYPE_NUMBER<sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_OV5640<sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CAMERA_OV3640<sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORMAT_JPEG<sp/><sp/><sp/><sp/>0X01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORMAT_RGB<sp/><sp/><sp/><sp/><sp/>0X02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORMAT_YUV<sp/><sp/><sp/><sp/><sp/>0X03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_160X120<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_320X240<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_640X480<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_800X600<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1280X720<sp/><sp/><sp/><sp/>(1&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1280X960<sp/><sp/><sp/><sp/>(1&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1600X1200<sp/><sp/><sp/>(1&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_1920X1080<sp/><sp/><sp/>(1&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_2048X1536<sp/><sp/><sp/>(1&lt;&lt;8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESOLUTION_2592X1944<sp/><sp/><sp/>(1&lt;&lt;9)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_NORMAL<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_BLUEISH<sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_REDISH<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_BW<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_SEPIA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_NEGATIVE<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_GREENISH<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_OVEREXPOSURE<sp/>(1&lt;&lt;6)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_SOLARIZE<sp/><sp/><sp/><sp/><sp/>(1&lt;&lt;7)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPECIAL_YELLOWISH<sp/><sp/><sp/><sp/>(1&lt;&lt;8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cameraDefaultState</highlight></codeline>
<codeline lineno="105"><highlight class="normal">{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cameraDefaultFormat;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>cameraDefaultResolution;</highlight></codeline>
<codeline lineno="108"><highlight class="normal">};</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCapture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csHigh(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csLow(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeReg(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr,uint8_t<sp/>val);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">uint8_t<sp/>readReg(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr);</highlight></codeline>
<codeline lineno="115"><highlight class="normal">uint8_t<sp/>busRead(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">uint8_t<sp/>busWrite(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearFifoFlag(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">uint32_t<sp/>readFifoLength(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">uint8_t<sp/>getBit(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr,<sp/>uint8_t<sp/>bit);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFifoBurst(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCapture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitI2cIdle(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">uint32_t<sp/>imageAvailable(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flushFifo(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startCapture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCameraInfo" kindref="compound">CameraInfo</ref><sp/>OV5640_CameraInfo<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structCameraInfo_1abbb53648ae151fa253a9e3d9ddacdb66" kindref="member">cameraId</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;5MP&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportResolution<sp/>=<sp/>RESOLUTION_320X240|RESOLUTION_640X480|RESOLUTION_1280X720|RESOLUTION_1600X1200|RESOLUTION_1920X1080|RESOLUTION_2592X1944,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSpecialEffects<sp/>=<sp/>SPECIAL_BLUEISH|SPECIAL_REDISH|SPECIAL_BW|SPECIAL_SEPIA|SPECIAL_NEGATIVE|SPECIAL_GREENISH|SPECIAL_OVEREXPOSURE|SPECIAL_SOLARIZE,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMax<sp/>=<sp/>30000,<sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMin<sp/>=<sp/>1000,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMax<sp/>=<sp/>1023,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMin<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportFocus<sp/>=<sp/>TRUE,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSharpness<sp/>=<sp/>FALSE,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>.deviceAddress<sp/>=<sp/>0x78,</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCameraInfo" kindref="compound">CameraInfo</ref><sp/>OV3640_CameraInfo<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>.<ref refid="structCameraInfo_1abbb53648ae151fa253a9e3d9ddacdb66" kindref="member">cameraId</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;3MP&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportResolution<sp/>=<sp/>RESOLUTION_320X240|RESOLUTION_640X480|RESOLUTION_1280X720|RESOLUTION_1600X1200|RESOLUTION_1920X1080|RESOLUTION_2048X1536,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSpecialEffects=SPECIAL_BLUEISH|SPECIAL_REDISH|SPECIAL_BW|SPECIAL_SEPIA|SPECIAL_NEGATIVE|SPECIAL_GREENISH|SPECIAL_YELLOWISH,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMax<sp/>=<sp/>1400,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>.exposureValueMin<sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMax<sp/>=<sp/>31,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>.gainValueMin<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportFocus<sp/>=<sp/>FALSE,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>.supportSharpness<sp/>=<sp/>TRUE,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>.deviceAddress<sp/>=<sp/>0x78,</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structCameraInfo" kindref="compound">CameraInfo</ref><sp/>CameraType[CAMERA_TYPE_NUMBER];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cameraDefaultState<sp/>ov5640DefaultState<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>.cameraDefaultFormat<sp/>=<sp/><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>.cameraDefaultResolution<sp/>=<sp/><ref refid="Arducam_8h_1aad9c52a28f327c5d815f76befe687015ad2563a3923a421d35d64192ad7e09b85" kindref="member">CAM_IMAGE_MODE_WQXGA2</ref>,</highlight></codeline>
<codeline lineno="160"><highlight class="normal">};</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cameraDefaultState<sp/>ov3640efaultState<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>.cameraDefaultFormat<sp/>=<sp/><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>.cameraDefaultResolution<sp/>=<sp/><ref refid="Arducam_8h_1aad9c52a28f327c5d815f76befe687015a5aada59aa0f3d06c022c9674da6f31a0" kindref="member">CAM_IMAGE_MODE_QXGA</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cameraDefaultState<sp/>cameraDefaultInfo[CAMERA_TYPE_NUMBER];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal">uint8_t<sp/>ov3640GainValue[]={0x00,0x10,0x18,0x30,0x34,0x38,0x3b,0x3f,0x72,0x74,0x76,0x78,0x7a,0x7c,0x7e,0xf0,0xf1,0xf2,0xf3,0xf4,0xf5,0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd,0xfe,0xff};</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraInit(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiBegin();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamCsOutputMode(MyCamera-&gt;csPin);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(MyCamera-&gt;csPin);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraBegin(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>cameraInit(MyCamera);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_SENSOR_RESET,CAM_SENSOR_RESET_ENABLE);<sp/><sp/></highlight><highlight class="comment">//reset<sp/>cpld<sp/>and<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;cameraId=readReg(MyCamera,CAM_REG_SENSOR_ID);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;cameraId&amp;=0X0F;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;cameraId-=1;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;myCameraInfo<sp/>=<sp/>CameraType[MyCamera-&gt;cameraId];</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;currentPixelFormat<sp/>=<sp/>cameraDefaultInfo[MyCamera-&gt;cameraId].cameraDefaultFormat;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;currentpictureMode<sp/>=<sp/>cameraDefaultInfo[MyCamera-&gt;cameraId].cameraDefaultResolution;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_DEBUG_DEVICE_ADDRESS,CameraType[MyCamera-&gt;cameraId].deviceAddress);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraSetCapture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>flushFifo(MyCamera);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>clearFifoFlag(MyCamera);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>startCapture(MyCamera);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(getBit(MyCamera,ARDUCHIP_TRIG,<sp/>CAP_DONE_MASK)==0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;receivedLength=readFifoLength(MyCamera);<sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;totalLength<sp/>=<sp/>MyCamera-&gt;receivedLength;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;burstFirstFlag<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal">uint32_t<sp/>cameraImageAvailable(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;receivedLength;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoFocus(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="219"><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_AUTO_FOCUS_CONTROL,val);<sp/><sp/></highlight><highlight class="comment">//auto<sp/>focus<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraTakePicture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref><sp/>mode,<sp/><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref><sp/>pixel_format)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((MyCamera-&gt;currentPixelFormat<sp/>!=<sp/>pixel_format)<sp/>||<sp/>(MyCamera-&gt;currentpictureMode<sp/>!=<sp/>mode))</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyCamera-&gt;currentPixelFormat<sp/>=<sp/>pixel_format;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyCamera-&gt;cameraDataFormat<sp/>=<sp/>pixel_format;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyCamera-&gt;currentpictureMode<sp/>=<sp/>mode;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_FORMAT,pixel_format);<sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>data<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_CAPTURE_RESOLUTION,CAM_SET_CAPTURE_MODE|mode);<sp/><sp/></highlight><highlight class="comment">//set<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>setCapture(MyCamera);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraRegisterCallback(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,<ref refid="Arducam_8h_1a81b801c80862c07bcbe65126db52164c" kindref="member">BUFFER_CALLBACK</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,uint8_t<sp/>size)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;callBackFunction=</highlight><highlight class="keyword">function</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;blockSize=size;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraStartPreview(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1a79f9eea25f8ca9df7e0773ab408baed7" kindref="member">CAM_VIDEO_MODE</ref><sp/>mode)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;cameraDataFormat<sp/>=<sp/><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;previewMode=TRUE;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>symbol=TRUE;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>callBackLength=0;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>callBackBuff[BUF_MAX_LENGTH];</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_FORMAT,<ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>);<sp/><sp/></highlight><highlight class="comment">//set<sp/><sp/>jpeg<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_CAPTURE_RESOLUTION,CAM_SET_VIDEO_MODE|mode);<sp/><sp/></highlight><highlight class="comment">//set<sp/><sp/>video<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>setCapture(MyCamera);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(MyCamera-&gt;previewMode)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callBackLength=<ref refid="Arducam_8h_1a5fea4d921b0298c6a83ee264f488ce64" kindref="member">readBuff</ref>(MyCamera,callBackBuff,MyCamera-&gt;blockSize);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(callBackLength<sp/>!=<sp/>FALSE)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol=MyCamera-&gt;callBackFunction(callBackBuff,callBackLength);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(symbol<sp/>==<sp/>FALSE)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="Arducam_8h_1a7a5c1590e5bed5739330a3a99532003f" kindref="member">stopPreview</ref>(MyCamera);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCapture(MyCamera);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraStopPreview(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;currentPixelFormat<sp/>=<sp/><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;currentpictureMode<sp/>=<sp/><ref refid="Arducam_8h_1aad9c52a28f327c5d815f76befe687015a7491cfab5664b60bfafa41bf26e59a5f" kindref="member">CAM_IMAGE_MODE_QVGA</ref>;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;previewMode<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;receivedLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;totalLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_FORMAT,<ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338a8a7afaef9a95f8d85c7147481f395f36" kindref="member">CAM_IMAGE_PIX_FMT_JPG</ref>);<sp/><sp/></highlight><highlight class="comment">//set<sp/><sp/>jpeg<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoWhiteBalanceMode(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,<ref refid="Arducam_8h_1a643d0ad26131376e247aab82485e0095" kindref="member">CAM_WHITE_BALANCE</ref><sp/>mode)</highlight></codeline>
<codeline lineno="294"><highlight class="normal">{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_WHILEBALANCE_MODE_CONTROL,mode);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>Light<sp/>Mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoWhiteBalance(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>SET_WHILEBALANCE;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL,symbol);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//while<sp/>balance<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoISOSensitive(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>SET_GAIN;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL,symbol);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>gain<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetISOSensitivity(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iso_sense)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyCamera-&gt;cameraId<sp/>==<sp/>CAMERA_OV3640)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iso_sense<sp/>=<sp/>ov3640GainValue[iso_sense-1];</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_MANUAL_GAIN_BIT_9_8,<sp/>iso_sense&gt;&gt;8);<sp/><sp/></highlight><highlight class="comment">//set<sp/>AGC<sp/>VALUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_MANUAL_GAIN_BIT_7_0,<sp/>iso_sense&amp;0xff);<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;<sp/></highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAutoExposure(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>symbol=0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>0x80;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>symbol<sp/>|=<sp/>SET_EXPOSURE;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_EXPOSURE_GAIN_WHILEBALANCE_CONTROL,symbol);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>auto<sp/>EXPOSURE<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetAbsoluteExposure(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint32_t<sp/>exposure_time)</highlight></codeline>
<codeline lineno="353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_MANUAL_EXPOSURE_BIT_19_16,<sp/>(uint8_t)((exposure_time&gt;&gt;16)&amp;0xff));<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>exposure<sp/>output<sp/>[19:16]<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_MANUAL_EXPOSURE_BIT_15_8,<sp/>(uint8_t)((exposure_time&gt;&gt;8)&amp;0xff));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>exposure<sp/>output<sp/>[15:8]<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_MANUAL_EXPOSURE_BIT_7_0,<sp/>(uint8_t)(exposure_time&amp;0xff));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>exposure<sp/>output<sp/>[7:0]<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetColorEffect(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,<ref refid="Arducam_8h_1a1396f1daef6526339ee8abe10a55c375" kindref="member">CAM_COLOR_FX</ref><sp/>effect)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_COLOR_EFFECT_CONTROL,effect);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetSaturation(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1af8d3f3a4b053155fc03d27c1dd23c011" kindref="member">CAM_STAURATION_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_SATURATION_CONTROL,level);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>Saturation<sp/>Level<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetEV(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1ab97c4e8f129e7b064def02a3e9e19aff" kindref="member">CAM_EV_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_EV_CONTROL,level);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>Exposure<sp/><sp/>Compensation<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetContrast(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1a039dba5eae31265427b4829d0db59231" kindref="member">CAM_CONTRAST_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="383"><highlight class="normal">{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_CONTRAST_CONTROL,level);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>Contrast<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetSharpness(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1afe52c72b2eda519bcd2b9db8df0d13f7" kindref="member">CAM_SHARPNESS_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="389"><highlight class="normal">{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_SHARPNESS_CONTROL,level);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>Brightness<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/>cameraSetBrightness(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1adf950e5ae505c62fabb157a5385c2c71" kindref="member">CAM_BRIGHTNESS_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_BRIGHTNESS_CONTROL,level);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>Brightness<sp/>Level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>waitI2cIdle(MyCamera);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Wait<sp/>I2c<sp/>Idle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1ad78fefb3ad26c90b550454e8b8505a1e" kindref="member">CAM_ERR_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraFlushFifo(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="402"><highlight class="normal">{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,ARDUCHIP_FIFO,<sp/>FIFO_CLEAR_MASK);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraStartCapture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,ARDUCHIP_FIFO,<sp/>FIFO_START_MASK);</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraClearFifoFlag(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,ARDUCHIP_FIFO,<sp/>FIFO_CLEAR_MASK);</highlight></codeline>
<codeline lineno="414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal">uint32_t<sp/>cameraReadFifoLength(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>len1,len2,len3,length=0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>len1<sp/>=<sp/>readReg(MyCamera,FIFO_SIZE1);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>len2<sp/>=<sp/>readReg(MyCamera,FIFO_SIZE2);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>len3<sp/>=<sp/>readReg(MyCamera,FIFO_SIZE3)<sp/>&amp;<sp/>0x7f;</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>((len3<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(len2<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>len1)<sp/>&amp;<sp/>0x07fffff;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;<sp/><sp/></highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal">uint8_t<sp/>cameraGetBit(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr,<sp/>uint8_t<sp/>bit)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/>uint8_t<sp/>temp;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>temp<sp/>=<sp/>readReg(MyCamera,addr);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/>temp<sp/>=<sp/>temp<sp/>&amp;<sp/>bit;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraSetFifoBurst(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiTransfer(BURST_FIFO_READ);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal">uint8_t<sp/>cameraReadByte(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(MyCamera-&gt;csPin);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiTransfer(SINGLE_FIFO_READ);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiTransfer(0x00);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>arducamSpiTransfer(0x00);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinHigh(MyCamera-&gt;csPin);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;receivedLength-=1;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal">uint8_t<sp/>cameraReadBuff(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t*<sp/>buff,uint8_t<sp/>length)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((length<sp/>&gt;<sp/>BUF_MAX_LENGTH)||(length==0))<sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(imageAvailable(MyCamera)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MyCamera-&gt;receivedLength&lt;length)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length=MyCamera-&gt;receivedLength;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(MyCamera-&gt;csPin);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>setFifoBurst(MyCamera);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(MyCamera-&gt;burstFirstFlag<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MyCamera-&gt;burstFirstFlag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arducamSpiTransfer(0x00);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>count<sp/>=<sp/>0;<sp/>count<sp/>&lt;<sp/>length;<sp/>count++)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buff[count]=arducamSpiTransfer(0x00);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinHigh(MyCamera-&gt;csPin);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;receivedLength-=length;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraWriteReg(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>busWrite(MyCamera,addr<sp/>|<sp/>0x80,<sp/>val);<sp/></highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal">uint8_t<sp/>cameraReadReg(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>busRead(MyCamera,addr<sp/>&amp;<sp/>0x7F);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">uint8_t<sp/>cameraBusWrite(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="495"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(MyCamera-&gt;csPin);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiTransfer(address);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiTransfer(value);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinHigh(MyCamera-&gt;csPin);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamDelayMs(1);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraCsHigh(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>arducamSpiCsPinHigh(MyCamera-&gt;csPin);<sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraCsLow(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(MyCamera-&gt;csPin);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal">}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal">uint8_t<sp/>cameraBusRead(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>value;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinLow(MyCamera-&gt;csPin);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiTransfer(address);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>arducamSpiTransfer(0x00);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>value<sp/>=<sp/>arducamSpiTransfer(0x00);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>arducamSpiCsPinHigh(MyCamera-&gt;csPin);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraWaitI2cIdle(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((readReg(MyCamera,CAM_REG_SENSOR_STATE)&amp;0X03)<sp/>!=<sp/>CAM_REG_SENSOR_STATE_IDLE)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arducamDelayMs(2);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraDebugWriteRegister(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,uint8_t*<sp/>buff)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>register_high<sp/>=<sp/>buff[0];</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>register_low<sp/>=<sp/>buff[1];</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>value<sp/>=<sp/>buff[2];</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_DEBUG_REGISTER_HIGH,register_high);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_DEBUG_REGISTER_LOW,register_low);<sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_DEBUG_REGISTER_VALUE,value);<sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraLowPowerOn(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_POWER_CONTROL,0X07);</highlight></codeline>
<codeline lineno="554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cameraLowPowerOff(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>writeReg(MyCamera,CAM_REG_POWER_CONTROL,0X05);</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1afa01cf559c0e0349f577531ad0fb6dfd" kindref="member">begin</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera)</highlight></codeline>
<codeline lineno="563"><highlight class="normal">{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;begin(MyCamera);</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a4b4689599eacca113533f31aa2c1a780" kindref="member">takePicture</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref><sp/>mode,<sp/><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref><sp/>pixel_format)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;takePicture(MyCamera,mode,pixel_format);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a06bc2a2863b8b2f3423b52bc32694e36" kindref="member">startPreview</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1a79f9eea25f8ca9df7e0773ab408baed7" kindref="member">CAM_VIDEO_MODE</ref><sp/>mode)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;startPreview(MyCamera,mode);</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a7a5c1590e5bed5739330a3a99532003f" kindref="member">stopPreview</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;stopPreview(MyCamera);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a0584ed3e822b2c7a17d77d077e1b7280" kindref="member">setAutoExposure</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setAutoExposure(MyCamera,val);</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a562e9ad2e6f5a4695c25c184e4a98dd7" kindref="member">setAbsoluteExposure</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint32_t<sp/>val)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setAbsoluteExposure(MyCamera,val);</highlight></codeline>
<codeline lineno="589"><highlight class="normal">}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a8eb9414457d81766f3aad92a98f6ef24" kindref="member">setAutoISOSensitive</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setAutoISOSensitive(MyCamera,val);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1aec2f34d10238d7f0ab7930dc53cb9321" kindref="member">setISOSensitivity</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iso_sense)</highlight></codeline>
<codeline lineno="595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setISOSensitivity(MyCamera,iso_sense);</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a8162cc01f15a88085c4479bd73bafbd4" kindref="member">setAutoWhiteBalance</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setAutoWhiteBalance(MyCamera,val);</highlight></codeline>
<codeline lineno="602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a1de41b8223dc0535bf5bbd5c73bc53a1" kindref="member">setAutoWhiteBalanceMode</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,<ref refid="Arducam_8h_1a643d0ad26131376e247aab82485e0095" kindref="member">CAM_WHITE_BALANCE</ref><sp/>mode)</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setAutoWhiteBalanceMode(MyCamera,mode);</highlight></codeline>
<codeline lineno="607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1afda96ee9175b35ce8008deb53905f4f4" kindref="member">setColorEffect</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,<ref refid="Arducam_8h_1a1396f1daef6526339ee8abe10a55c375" kindref="member">CAM_COLOR_FX</ref><sp/>effect)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setColorEffect(MyCamera,effect);</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1aa76988c6f4a63ee0b8aa37769af50f1d" kindref="member">setAutoFocus</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setAutoFocus(MyCamera,val);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a55aa0e5f3177bc8e5f2123eaccbcf855" kindref="member">setSaturation</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1af8d3f3a4b053155fc03d27c1dd23c011" kindref="member">CAM_STAURATION_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setSaturation(MyCamera,level);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a29f019156ad8fc318833964c3951e1e1" kindref="member">setEV</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1ab97c4e8f129e7b064def02a3e9e19aff" kindref="member">CAM_EV_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setEV(MyCamera,level);</highlight></codeline>
<codeline lineno="626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1a2cfae9991acae4d7018b6e6480c672c5" kindref="member">setContrast</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1a039dba5eae31265427b4829d0db59231" kindref="member">CAM_CONTRAST_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setContrast(MyCamera,level);</highlight></codeline>
<codeline lineno="631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1abd90d56b2d22e58ba43aa24f0c696ec8" kindref="member">setBrightness</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1adf950e5ae505c62fabb157a5385c2c71" kindref="member">CAM_BRIGHTNESS_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setBrightness(MyCamera,level);</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref><sp/><ref refid="Arducam_8h_1aba171df087244901182c7191cafbfe44" kindref="member">setSharpness</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,<ref refid="Arducam_8h_1afe52c72b2eda519bcd2b9db8df0d13f7" kindref="member">CAM_SHARPNESS_LEVEL</ref><sp/>level)</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;setSharpness(MyCamera,level);</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal">uint8_t<sp/><ref refid="Arducam_8h_1a5fea4d921b0298c6a83ee264f488ce64" kindref="member">readBuff</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t*buff,uint8_t<sp/>length)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;readBuff(MyCamera,buff,length);</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal">uint8_t<sp/><ref refid="Arducam_8h_1ab52b3e1f447b08a17a0ef71369841625" kindref="member">readByte</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;readByte(MyCamera);</highlight></codeline>
<codeline lineno="651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a3fbbe9360229a69adb8e6bcc56e78e67" kindref="member">debugWriteRegister</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,uint8_t*<sp/>buff)</highlight></codeline>
<codeline lineno="654"><highlight class="normal">{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;debugWriteRegister(MyCamera,buff);</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1ad9ebd71be49b16d357f10c110c2a0ec3" kindref="member">registerCallback</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera,<ref refid="Arducam_8h_1a81b801c80862c07bcbe65126db52164c" kindref="member">BUFFER_CALLBACK</ref><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">,uint8_t<sp/>blockSize)</highlight></codeline>
<codeline lineno="659"><highlight class="normal">{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;registerCallback(MyCamera,</highlight><highlight class="keyword">function</highlight><highlight class="normal">,blockSize);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a211830fe889fc291d3d2013ad9e987cb" kindref="member">lowPowerOn</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;lowPowerOn(MyCamera);</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="Arducam_8h_1a45c5f4d36c04ff7fdad03b1932ebaaf9" kindref="member">lowPowerOff</ref>(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;lowPowerOff(MyCamera);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csHigh(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;csHigh(MyCamera);</highlight></codeline>
<codeline lineno="679"><highlight class="normal">}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>csLow(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;csLow(MyCamera);</highlight></codeline>
<codeline lineno="683"><highlight class="normal">}</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writeReg(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr,uint8_t<sp/>val)</highlight></codeline>
<codeline lineno="687"><highlight class="normal">{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;writeReg(MyCamera,addr,val);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal">uint8_t<sp/>readReg(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;readReg(MyCamera,addr);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal">uint8_t<sp/>busRead(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;busRead(MyCamera,address);</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal">uint8_t<sp/>busWrite(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>address,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;busWrite(MyCamera,address,value);</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>startCapture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;startCapture(MyCamera);</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clearFifoFlag(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;clearFifoFlag(MyCamera);</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal">uint32_t<sp/>readFifoLength(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;readFifoLength(MyCamera);</highlight></codeline>
<codeline lineno="717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="718"><highlight class="normal">uint8_t<sp/>getBit(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera,uint8_t<sp/>addr,<sp/>uint8_t<sp/>bit)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;getBit(MyCamera,addr,bit);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setFifoBurst(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;setFifoBurst(MyCamera);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setCapture(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*<sp/>MyCamera)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;setCapture(MyCamera);</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>waitI2cIdle(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;waitI2cIdle(MyCamera);</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal">uint32_t<sp/>imageAvailable(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera-&gt;arducamCameraOp-&gt;imageAvailable(MyCamera);</highlight></codeline>
<codeline lineno="738"><highlight class="normal">}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>flushFifo(<ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref>*MyCamera)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera-&gt;arducamCameraOp-&gt;flushFifo(MyCamera);</highlight></codeline>
<codeline lineno="743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">CameraOperations<sp/>ArducamcameraOperations<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/>.begin<sp/>=<sp/>cameraBegin,</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>.takePicture<sp/>=<sp/>cameraTakePicture,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/>.startPreview<sp/>=<sp/>cameraStartPreview,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/>.stopPreview<sp/>=<sp/>cameraStopPreview,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoExposure<sp/>=<sp/>cameraSetAutoExposure,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAbsoluteExposure<sp/>=<sp/>cameraSetAbsoluteExposure,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoISOSensitive<sp/>=<sp/>cameraSetAutoISOSensitive,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/>.setISOSensitivity<sp/>=<sp/>cameraSetISOSensitivity,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoWhiteBalance<sp/>=<sp/>cameraSetAutoWhiteBalance,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoWhiteBalanceMode<sp/>=<sp/>cameraSetAutoWhiteBalanceMode,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>.setColorEffect<sp/>=<sp/>cameraSetColorEffect,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>.setAutoFocus<sp/>=<sp/>cameraSetAutoFocus,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>.setSaturation<sp/>=<sp/>cameraSetSaturation,</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>.setEV<sp/>=<sp/>cameraSetEV,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>.setContrast<sp/>=<sp/>cameraSetContrast,</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>.setBrightness<sp/>=<sp/>cameraSetBrightness,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>.setSharpness<sp/>=<sp/>cameraSetSharpness,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>.registerCallback<sp/>=<sp/>cameraRegisterCallback,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>.imageAvailable<sp/>=<sp/>cameraImageAvailable,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/>.csHigh<sp/>=<sp/>cameraCsHigh,</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/>.csLow<sp/>=<sp/>cameraCsLow,</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/>.readBuff<sp/>=<sp/>cameraReadBuff,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>.readByte<sp/>=<sp/>cameraReadByte,</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>.debugWriteRegister<sp/>=<sp/>cameraDebugWriteRegister,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/>.writeReg<sp/>=<sp/>cameraWriteReg,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>.readReg<sp/>=<sp/>cameraReadReg,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>.busRead<sp/>=<sp/>cameraBusRead,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>.busWrite<sp/>=<sp/>cameraBusWrite,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>.flushFifo<sp/>=<sp/>cameraFlushFifo,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>.startCapture<sp/>=<sp/>cameraStartCapture,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>.clearFifoFlag<sp/>=<sp/>cameraClearFifoFlag,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/>.readFifoLength<sp/>=<sp/>cameraReadFifoLength,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/>.getBit<sp/>=<sp/>cameraGetBit,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>.setFifoBurst<sp/>=<sp/>cameraSetFifoBurst,</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>.setCapture<sp/>=<sp/>cameraSetCapture,</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>.waitI2cIdle<sp/>=<sp/>cameraWaitI2cIdle,</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>.lowPowerOn<sp/>=<sp/>cameraLowPowerOn,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>.lowPowerOff<sp/>=<sp/>cameraLowPowerOff,</highlight></codeline>
<codeline lineno="785"><highlight class="normal">};</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref><sp/><ref refid="Arducam_8h_1ada4a7f048d83ba0fe3a3c01f2588f6dd" kindref="member">createArducamCamera</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CS)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref><sp/>MyCamera;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraType[0]<sp/>=<sp/>OV5640_CameraInfo;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>CameraType[1]<sp/>=<sp/>OV3640_CameraInfo;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>cameraDefaultInfo[0]<sp/>=<sp/>ov5640DefaultState;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>cameraDefaultInfo[1]<sp/>=<sp/>ov3640efaultState;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera.cameraId<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera.cameraDataFormat<sp/>=<sp/>FORMAT_JPEG;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera.burstFirstFlag<sp/>=<sp/>FALSE;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera.previewMode=FALSE;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera.csPin<sp/>=<sp/>CS;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>MyCamera.arducamCameraOp<sp/>=<sp/>&amp;ArducamcameraOperations;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MyCamera;</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/lou/arducamSpiCamera/libraryC/Arducam.c"/>
  </compounddef>
</doxygen>
