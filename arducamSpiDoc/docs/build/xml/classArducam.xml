<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classArducam" kind="class" language="C++" prot="public">
    <compoundname>Arducam</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classArducam_1ad65c5970bccb4dba650f9e1cdbde322f" prot="private" static="no" mutable="no">
        <type><ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref></type>
        <definition>ArducamCamera Arducam::cameraInfo</definition>
        <argsstring></argsstring>
        <name>cameraInfo</name>
        <briefdescription>
<para>Camera drive interface and information. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="37" column="20" bodyfile="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classArducam_1ab5fec2bf7ef3994ff94ea2e0bd3ea543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Arducam::Arducam</definition>
        <argsstring>(int cs)</argsstring>
        <name>Arducam</name>
        <param>
          <type>int</type>
          <declname>cs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="43" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a175fee3b4c3f12d7cd1596a6b05e5b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::begin</definition>
        <argsstring>(void)</argsstring>
        <name>begin</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Initialize the configuration of the camera module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return operation status <linebreak/>
 </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="50" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a4fe771a1998e11dc8b817873906e1d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::takePicture</definition>
        <argsstring>(CAM_IMAGE_MODE mode, CAM_IMAGE_PIX_FMT pixel_format)</argsstring>
        <name>takePicture</name>
        <param>
          <type><ref refid="Arducam_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref></type>
          <declname>pixel_format</declname>
        </param>
        <briefdescription>
<para>Start a snapshot with specified resolution and pixel format. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Resolution of the camera module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pixel_format</parametername>
</parameternamelist>
<parameterdescription>
<para>Output image pixel format,which supports JPEG, RGB, YUV</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status</para>
</simplesect>
<simplesect kind="note"><para>The mode parameter must be the resolution which the current camera supported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="63" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1ab8c729632f3aee329ab313b126ae7bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::takeMultiPictures</definition>
        <argsstring>(CAM_IMAGE_MODE mode, CAM_IMAGE_PIX_FMT pixel_format, uint8_t number)</argsstring>
        <name>takeMultiPictures</name>
        <param>
          <type><ref refid="Arducam_8h_1aad9c52a28f327c5d815f76befe687015" kindref="member">CAM_IMAGE_MODE</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type><ref refid="Arducam_8h_1ae9748ceecc6f11421cb46fc489606338" kindref="member">CAM_IMAGE_PIX_FMT</ref></type>
          <declname>pixel_format</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>number</declname>
        </param>
        <briefdescription>
<para>Start multi capture with specified number of image. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Resolution of the camera module </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pixel_format</parametername>
</parameternamelist>
<parameterdescription>
<para>Output image pixel format,which supports JPEG, RGB, YUV </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>number</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of pictures taken</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status</para>
</simplesect>
<simplesect kind="note"><para>The mode parameter must be the resolution which the current camera supported </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="78" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a00ebf633fd37a8f9ade14e49521ac724" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::startPreview</definition>
        <argsstring>(CAM_VIDEO_MODE mode)</argsstring>
        <name>startPreview</name>
        <param>
          <type><ref refid="Arducam_8h_1a79f9eea25f8ca9df7e0773ab408baed7" kindref="member">CAM_VIDEO_MODE</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Start preview with specified resolution mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Resolution of the camera module</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status</para>
</simplesect>
<simplesect kind="note"><para>Before calling this function, you need to register the callback function.The default image pixel format is JPEG </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="90" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a30e719f990b2607b53dca643c137146f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::stopPreview</definition>
        <argsstring>(void)</argsstring>
        <name>stopPreview</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Stop preview. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="99" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1ae0135f5d6d8d62985bfd99c7be42e32c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setAutoExposure</definition>
        <argsstring>(uint8_t val)</argsstring>
        <name>setAutoExposure</name>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the exposure mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>0</computeroutput> Turn on automatic exposure <computeroutput>1</computeroutput> Turn off automatic exposure</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="109" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1af8cf1d5e249b069d767c992d5316a12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setAbsoluteExposure</definition>
        <argsstring>(uint32_t val)</argsstring>
        <name>setAbsoluteExposure</name>
        <param>
          <type>uint32_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the exposure time Manually. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of exposure line</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status</para>
</simplesect>
<simplesect kind="note"><para>Before calling this function, you need to turn off the auto exposure function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="120" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a2dc1e0a7faa2115d4cfdf571bedcc6c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setAutoISOSensitive</definition>
        <argsstring>(uint8_t val)</argsstring>
        <name>setAutoISOSensitive</name>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the gain mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>0</computeroutput> turn on automatic gain <computeroutput>1</computeroutput> turn off automatic gain</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="130" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1acf7e4e17f0fa3dfb7ca771c5534b617e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setISOSensitivity</definition>
        <argsstring>(int val)</argsstring>
        <name>setISOSensitivity</name>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set the exposure time Manually. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of gain</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status</para>
</simplesect>
<simplesect kind="note"><para>Before calling this function, you need to turn off the auto gain function </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="141" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1aa7eacb7256f2349c6cfa24d8428cc151" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setAutoWhiteBalance</definition>
        <argsstring>(uint8_t val)</argsstring>
        <name>setAutoWhiteBalance</name>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set white balance mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para><computeroutput>0</computeroutput> turn on automatic white balance <computeroutput>1</computeroutput> turn off automatic white balance</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="151" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a8a649cc23054a05500c7ca00d3f7b9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setAutoWhiteBalanceMode</definition>
        <argsstring>(CAM_WHITE_BALANCE mode)</argsstring>
        <name>setAutoWhiteBalanceMode</name>
        <param>
          <type><ref refid="Arducam_8h_1a643d0ad26131376e247aab82485e0095" kindref="member">CAM_WHITE_BALANCE</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
<para>Set the white balance mode Manually. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>White balance mode</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="161" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1af3a2356f79b387de6ac0d4dff7ec4d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setColorEffect</definition>
        <argsstring>(CAM_COLOR_FX effect)</argsstring>
        <name>setColorEffect</name>
        <param>
          <type><ref refid="Arducam_8h_1a1396f1daef6526339ee8abe10a55c375" kindref="member">CAM_COLOR_FX</ref></type>
          <declname>effect</declname>
        </param>
        <briefdescription>
<para>Set special effects. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>effect</parametername>
</parameternamelist>
<parameterdescription>
<para>Special effects mode</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="171" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a509a0afaab0eff49d60699accd28e887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setAutoFocus</definition>
        <argsstring>(uint8_t val)</argsstring>
        <name>setAutoFocus</name>
        <param>
          <type>uint8_t</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Set auto focus mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>mode of autofocus</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status <linebreak/>
</para>
</simplesect>
<simplesect kind="note"><para>Only <computeroutput>5MP</computeroutput> cameras support auto focus control </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="182" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a6a17f7b6d1036576c0f9daa42988f7bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setSaturation</definition>
        <argsstring>(CAM_STAURATION_LEVEL level)</argsstring>
        <name>setSaturation</name>
        <param>
          <type><ref refid="Arducam_8h_1af8d3f3a4b053155fc03d27c1dd23c011" kindref="member">CAM_STAURATION_LEVEL</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set saturation level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Saturation level</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="192" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a94c033110e54f57e2de5a448050a2714" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setEV</definition>
        <argsstring>(CAM_EV_LEVEL level)</argsstring>
        <name>setEV</name>
        <param>
          <type><ref refid="Arducam_8h_1ab97c4e8f129e7b064def02a3e9e19aff" kindref="member">CAM_EV_LEVEL</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set EV level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>EV level</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="202" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a8db3da7d1acc1baef8389ee78bee3ff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setContrast</definition>
        <argsstring>(CAM_CONTRAST_LEVEL level)</argsstring>
        <name>setContrast</name>
        <param>
          <type><ref refid="Arducam_8h_1a039dba5eae31265427b4829d0db59231" kindref="member">CAM_CONTRAST_LEVEL</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set Contrast level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Contrast level</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="212" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1aeeb3e39b1555c4a7b764ab26db23e53f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setBrightness</definition>
        <argsstring>(CAM_BRIGHTNESS_LEVEL level)</argsstring>
        <name>setBrightness</name>
        <param>
          <type><ref refid="Arducam_8h_1adf950e5ae505c62fabb157a5385c2c71" kindref="member">CAM_BRIGHTNESS_LEVEL</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set Brightness level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Brightness level</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="222" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a555e475f1a0451269ac34b4a5e6b1fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="Arducam_8h_1a859449669e9de69e33ddd851c3eac6c1" kindref="member">CamStatus</ref></type>
        <definition>CamStatus Arducam::setSharpness</definition>
        <argsstring>(CAM_SHARPNESS_LEVEL level)</argsstring>
        <name>setSharpness</name>
        <param>
          <type><ref refid="Arducam_8h_1afe52c72b2eda519bcd2b9db8df0d13f7" kindref="member">CAM_SHARPNESS_LEVEL</ref></type>
          <declname>level</declname>
        </param>
        <briefdescription>
<para>Set Sharpness level. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>Sharpness level</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return operation status</para>
</simplesect>
<simplesect kind="note"><para>Only <computeroutput>3MP</computeroutput> cameras support sharpness control </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="233" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1ae633604b6107b0d6944713c2fac29e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Arducam::readBuff</definition>
        <argsstring>(uint8_t *, uint8_t)</argsstring>
        <name>readBuff</name>
        <param>
          <type>uint8_t *</type>
        </param>
        <param>
          <type>uint8_t</type>
        </param>
        <briefdescription>
<para>Read image data with specified length to buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buff</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer for storing camera data </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the available data to be read</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns the length actually read</para>
</simplesect>
<simplesect kind="note"><para>Transmission length should be less than <computeroutput>255</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="245" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1afc5ae441c38374e132ed6d087caab97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t Arducam::readByte</definition>
        <argsstring>(void)</argsstring>
        <name>readByte</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Read a byte from FIFO. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns Camera data</para>
</simplesect>
<simplesect kind="note"><para>Before calling this function, make sure that the data is available in the buffer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="254" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a948a110ca9be1b2ff852188d26e2f9bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Arducam::debugWriteRegister</definition>
        <argsstring>(uint8_t *)</argsstring>
        <name>debugWriteRegister</name>
        <param>
          <type>uint8_t *</type>
        </param>
        <briefdescription>
<para>Debug mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buff</parametername>
</parameternamelist>
<parameterdescription>
<para>There are four bytes of buff Byte 1 indicates the device address, Byte 2 indicates the high octet of the register, Byte 3 indicates the low octet of the register, and Byte 4 indicates the value written to the register </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="262" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a195a1edcc051f25756e7878aec65c2bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Arducam::registerCallBack</definition>
        <argsstring>(BUFFER_CALLBACK, uint8_t)</argsstring>
        <name>registerCallBack</name>
        <param>
          <type><ref refid="Arducam_8h_1a81b801c80862c07bcbe65126db52164c" kindref="member">BUFFER_CALLBACK</ref></type>
        </param>
        <param>
          <type>uint8_t</type>
        </param>
        <briefdescription>
<para>Create callback function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>function</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function name </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blockSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the data transmitted by the callback function at one time</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Transmission length should be less than <computeroutput>255</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="272" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a9a5e944bcc4bf00fd660a99ec66807bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Arducam::lowPowerOn</definition>
        <argsstring>(void)</argsstring>
        <name>lowPowerOn</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Turn on low power mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="279" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a7d005600c912ec1f176be43701a3280e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Arducam::lowPowerOff</definition>
        <argsstring>(void)</argsstring>
        <name>lowPowerOff</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Turn off low power mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="286" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a74e0a7a5073f7bbd49ba5d95947e5c85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t Arducam::getTotalLength</definition>
        <argsstring>(void)</argsstring>
        <name>getTotalLength</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the length of the picture. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return the length of the picture </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="296" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a9c451a5c5610a8ac3bffbcfc9503dd1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t Arducam::getReceivedLength</definition>
        <argsstring>(void)</argsstring>
        <name>getReceivedLength</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Get the length of the unread image. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Returns the length of the unread image </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="304" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classArducam_1a0db3cb59aeb07304be705a58d3cb6794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref> *</type>
        <definition>ArducamCamera* Arducam::getCameraInstance</definition>
        <argsstring>(void)</argsstring>
        <name>getCameraInstance</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>return a camera instance </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Return a <ref refid="structArducamCamera" kindref="compound">ArducamCamera</ref> instance </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="312" column="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" line="30" column="1" bodyfile="/home/lou/arducamSpiDoc/libraryC++/Arducam.hpp" bodystart="29" bodyend="313"/>
    <listofallmembers>
      <member refid="classArducam_1ab5fec2bf7ef3994ff94ea2e0bd3ea543" prot="public" virt="non-virtual"><scope>Arducam</scope><name>Arducam</name></member>
      <member refid="classArducam_1a175fee3b4c3f12d7cd1596a6b05e5b01" prot="public" virt="non-virtual"><scope>Arducam</scope><name>begin</name></member>
      <member refid="classArducam_1ad65c5970bccb4dba650f9e1cdbde322f" prot="private" virt="non-virtual"><scope>Arducam</scope><name>cameraInfo</name></member>
      <member refid="classArducam_1a948a110ca9be1b2ff852188d26e2f9bc" prot="public" virt="non-virtual"><scope>Arducam</scope><name>debugWriteRegister</name></member>
      <member refid="classArducam_1a0db3cb59aeb07304be705a58d3cb6794" prot="public" virt="non-virtual"><scope>Arducam</scope><name>getCameraInstance</name></member>
      <member refid="classArducam_1a9c451a5c5610a8ac3bffbcfc9503dd1b" prot="public" virt="non-virtual"><scope>Arducam</scope><name>getReceivedLength</name></member>
      <member refid="classArducam_1a74e0a7a5073f7bbd49ba5d95947e5c85" prot="public" virt="non-virtual"><scope>Arducam</scope><name>getTotalLength</name></member>
      <member refid="classArducam_1a7d005600c912ec1f176be43701a3280e" prot="public" virt="non-virtual"><scope>Arducam</scope><name>lowPowerOff</name></member>
      <member refid="classArducam_1a9a5e944bcc4bf00fd660a99ec66807bd" prot="public" virt="non-virtual"><scope>Arducam</scope><name>lowPowerOn</name></member>
      <member refid="classArducam_1ae633604b6107b0d6944713c2fac29e3f" prot="public" virt="non-virtual"><scope>Arducam</scope><name>readBuff</name></member>
      <member refid="classArducam_1afc5ae441c38374e132ed6d087caab97d" prot="public" virt="non-virtual"><scope>Arducam</scope><name>readByte</name></member>
      <member refid="classArducam_1a195a1edcc051f25756e7878aec65c2bf" prot="public" virt="non-virtual"><scope>Arducam</scope><name>registerCallBack</name></member>
      <member refid="classArducam_1af8cf1d5e249b069d767c992d5316a12f" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setAbsoluteExposure</name></member>
      <member refid="classArducam_1ae0135f5d6d8d62985bfd99c7be42e32c" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setAutoExposure</name></member>
      <member refid="classArducam_1a509a0afaab0eff49d60699accd28e887" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setAutoFocus</name></member>
      <member refid="classArducam_1a2dc1e0a7faa2115d4cfdf571bedcc6c2" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setAutoISOSensitive</name></member>
      <member refid="classArducam_1aa7eacb7256f2349c6cfa24d8428cc151" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setAutoWhiteBalance</name></member>
      <member refid="classArducam_1a8a649cc23054a05500c7ca00d3f7b9c2" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setAutoWhiteBalanceMode</name></member>
      <member refid="classArducam_1aeeb3e39b1555c4a7b764ab26db23e53f" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setBrightness</name></member>
      <member refid="classArducam_1af3a2356f79b387de6ac0d4dff7ec4d6e" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setColorEffect</name></member>
      <member refid="classArducam_1a8db3da7d1acc1baef8389ee78bee3ff8" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setContrast</name></member>
      <member refid="classArducam_1a94c033110e54f57e2de5a448050a2714" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setEV</name></member>
      <member refid="classArducam_1acf7e4e17f0fa3dfb7ca771c5534b617e" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setISOSensitivity</name></member>
      <member refid="classArducam_1a6a17f7b6d1036576c0f9daa42988f7bc" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setSaturation</name></member>
      <member refid="classArducam_1a555e475f1a0451269ac34b4a5e6b1fb6" prot="public" virt="non-virtual"><scope>Arducam</scope><name>setSharpness</name></member>
      <member refid="classArducam_1a00ebf633fd37a8f9ade14e49521ac724" prot="public" virt="non-virtual"><scope>Arducam</scope><name>startPreview</name></member>
      <member refid="classArducam_1a30e719f990b2607b53dca643c137146f" prot="public" virt="non-virtual"><scope>Arducam</scope><name>stopPreview</name></member>
      <member refid="classArducam_1ab8c729632f3aee329ab313b126ae7bdd" prot="public" virt="non-virtual"><scope>Arducam</scope><name>takeMultiPictures</name></member>
      <member refid="classArducam_1a4fe771a1998e11dc8b817873906e1d0b" prot="public" virt="non-virtual"><scope>Arducam</scope><name>takePicture</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
